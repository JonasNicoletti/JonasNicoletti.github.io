{"version":3,"sources":["components/header/Header.tsx","components/app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","Header","props","classes","handleThemeChange","sections","Fragment","className","component","variant","color","align","noWrap","IconButton","onClick","map","section","href","url","title","mainGrid","marginTop","App","useState","setTheme","paletteType","appliedTheme","createMuiTheme","type","CssBaseline","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2VASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,aAAa,aAAD,OAAeF,EAAMG,QAAQC,UAE3CC,aAAc,CACZC,KAAM,GAERC,iBAAkB,CAChBC,eAAgB,eAChBC,UAAW,QAEbC,YAAa,CACXC,QAASX,EAAMY,QAAQ,GACvBC,WAAY,OA6DDC,EA/CA,SAACC,GAEd,IAAMC,EAAUlB,IACTE,EAAsCe,EAAtCf,MAAOiB,EAA+BF,EAA/BE,kBAAmBC,EAAYH,EAAZG,SAEjC,OACE,eAAC,IAAMC,SAAP,WACE,eAAC,IAAD,CAASC,UAAWJ,EAAQf,QAA5B,UACE,cAAC,IAAD,CACEoB,UAAU,KACVC,QAAQ,KACRC,MAAM,UACNC,MAAM,SACNC,QAAM,EACNL,UAAWJ,EAAQX,aANrB,6BAUA,cAACqB,EAAA,EAAD,CAAYC,QAAS,kBAAMV,KAA3B,SACGjB,EACD,cAAC,IAAD,IACA,cAAC,IAAD,SAIJ,cAAC,IAAD,CACEqB,UAAU,MACVC,QAAQ,QACRF,UAAWJ,EAAQT,iBAHrB,SAKGW,EAASU,KAAI,SAACC,GAAD,OACZ,cAAC,IAAD,CACEN,MAAM,UACNE,QAAM,EAENH,QAAQ,QACRQ,KAAMD,EAAQE,IACdX,UAAWJ,EAAQN,YANrB,SAQGmB,EAAQG,OALJH,EAAQG,gBChEnBlC,EAAYC,KAAW,SAACC,GAAD,MAAY,CACvCiC,SAAU,CACRC,UAAWlC,EAAMY,QAAQ,QAIvBM,EAAW,CACf,CAAEc,MAAO,WAAYD,IAAK,KAC1B,CAAEC,MAAO,OAAQD,IAAK,KACtB,CAAEC,MAAO,WAAYD,IAAK,MAgCbI,MA7Bf,WACkBrC,IAAhB,IADa,EAEasC,oBAAS,GAFtB,mBAENpC,EAFM,KAECqC,EAFD,KAGPC,EAActC,EAAQ,OAAS,QAE/BuC,EAAeC,IAAe,CAClCrC,QAAS,CACPsC,KAAMH,KAQV,OACE,eAAC,IAAD,CAAkBtC,MAAOuC,EAAzB,UACE,cAACG,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAC,EAAD,CACE3B,kBATkB,WACxBoB,GAAUrC,IASJkB,SAAUA,EACVlB,MAAOA,UC1BF6C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACd,EAAA,EAAD,IACA,cAAC,EAAD,OAEFe,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1f0b2340.chunk.js","sourcesContent":["import { IconButton } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar/Toolbar\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: \"space-around\",\n    overflowX: \"auto\",\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n}));\n\ninterface HeaderProps {\n  handleThemeChange: () => void;\n  theme: boolean,\n  sections: Array<Section>\n}\n\ninterface Section {\n  title: string,\n  url: string\n}\nconst Header = (props: HeaderProps) => {\n\n  const classes = useStyles();\n  const {theme, handleThemeChange, sections} = props;\n\n  return (\n    <React.Fragment>\n      <Toolbar className={classes.toolbar}>\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          color=\"inherit\"\n          align=\"center\"\n          noWrap\n          className={classes.toolbarTitle}\n        >\n          Jonas Nicoletti\n        </Typography>\n        <IconButton onClick={() => handleThemeChange()}>\n          {theme ?\n          <Brightness7Icon /> :\n          <Brightness3Icon />\n        }\n        </IconButton>\n      </Toolbar>\n      <Toolbar\n        component=\"nav\"\n        variant=\"dense\"\n        className={classes.toolbarSecondary}\n      >\n        {sections.map((section) => (\n          <Link\n            color=\"inherit\"\n            noWrap\n            key={section.title}\n            variant=\"body2\"\n            href={section.url}\n            className={classes.toolbarLink}\n          >\n            {section.title}\n          </Link>\n        ))}\n      </Toolbar>\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n","import { Container, CssBaseline, MuiThemeProvider } from \"@material-ui/core\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport React, { useState } from \"react\";\nimport Header from \"../header/Header\";\n\nconst useStyles = makeStyles((theme) => ({\n  mainGrid: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst sections = [\n  { title: \"Projects\", url: \"#\" },\n  { title: \"Runs\", url: \"#\" },\n  { title: \"About me\", url: \"#\" },\n];\n\nfunction App() {\n  const classes = useStyles();\n  const [theme, setTheme] = useState(true);\n  const paletteType = theme ? \"dark\" : \"light\";\n\n  const appliedTheme = createMuiTheme({\n    palette: {\n      type: paletteType,\n    },\n  });\n\n  const handleThemeChange = () => {\n    setTheme(!theme);\n  };\n\n  return (\n    <MuiThemeProvider theme={appliedTheme}>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Header\n          handleThemeChange={handleThemeChange}\n          sections={sections}\n          theme={theme}\n        />\n      </Container>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}